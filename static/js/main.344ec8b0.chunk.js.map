{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Cards/Cards.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Images/covid19.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","CountryPicker","handleCountryChange","countriesArray","setCountriesArray","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Cards","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","App","setData","setCountry","fetchedData","console","log","image","src","alt","render","document","getElementById"],"mappings":"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","file":"static/js/main.344ec8b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__29rGE\",\"card\":\"Cards_card__yTsXs\",\"infected\":\"Cards_infected__Pupu1\",\"recovered\":\"Cards_recovered__3IXmc\",\"deaths\":\"Cards_deaths__2ebYv\"};","import axios from 'axios'\r\n\r\nconst url =  \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url\r\n\r\n    if(country==='global') {\r\n        changeableUrl = url\r\n    } else if (country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n   \r\n    try {\r\n        const {data:{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl)\r\n        return {confirmed, recovered, deaths, lastUpdate}\r\n    } catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData\r\n    }catch (error) {\r\n        return error\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data: {countries} } = await axios.get(`${url}/countries`)\r\n       \r\n        return countries.map((country)=> country.name)\r\n    }catch (error){\r\n        return error\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\nimport { fetchCountries } from '../../api'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nexport default function CountryPicker({ handleCountryChange }) {\r\n    const [countriesArray, setCountriesArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCountriesArray(await fetchCountries())\r\n        }\r\n        fetchAPI();\r\n    },[])\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(e)=> handleCountryChange(e.target.value)}>\r\n                <option value='global'>Global</option>\r\n                {countriesArray.map((country, i)=> \r\n                    <option value={country} key={i}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nexport default function Cards({data:{confirmed, recovered, deaths, lastUpdate}}) {\r\n    if(!confirmed) {\r\n        return 'Loading...'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify='center'>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            Updated as of {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of active cases of COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            Updated as of {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of recoveries from COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                            Updated as of {new Date(lastUpdate).toDateString()}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Number of deaths caused by COVID-19.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React ,{useState, useEffect} from 'react'\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\n\r\nimport {fetchData} from './api'\r\nimport image from './components/Images/covid19.png'\r\n\r\nexport default function App() {\r\n    const [data, setData] = useState({})\r\n    const [country, setCountry] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const fetchedData = async () => {\r\n            setData(await fetchData())\r\n        }\r\n        fetchedData()\r\n    }, [])\r\n\r\n    const handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        setData(fetchedData)\r\n        setCountry(country)\r\n        console.log(fetchedData)\r\n    }\r\n\r\n    return (\r\n        <div className = {styles.container}>\r\n            <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n            <Cards data={data} country={country}/>\r\n            <CountryPicker handleCountryChange={handleCountryChange}/>\r\n            <Chart data={data} country={country}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {render} from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nrender(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3I7D2\",\"image\":\"App_image__qf4JC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__aE5jS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2gArY\",\"formControl\":\"CountryPicker_formControl__skJhJ\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}